{
  "links": [
    {
      "source": "input connector",
      "destination": "A",
      "dataFlow": {
        "in_inner_parallel": "in_inner_parallel",
        "in_outer_parallel": "in_outer_parallel"
      }
    },
    {
      "source": "A",
      "destination": "output connector",
      "dataFlow": {
        "out_inner_parallel": "out_inner_parallel",
        "out_outer_parallel": "out_outer_parallel"
      }
    }
  ],
  "tasks": {
    "A": {
      "methods": [
        {
          "name": "inner",
          "parameters": {
            "links": [
              {
                "source": "input connector",
                "destination": "A",
                "dataFlow": {
                  "in_inner_parallel": "kitten_name",
                  "in_outer_parallel": "animal_type"
                }
              },
              {
                "source": "A",
                "destination": "output connector",
                "dataFlow": {
                  "animal_type": "out_outer_parallel",
                  "kitten_name": "out_inner_parallel"
                }
              }
            ],
            "tasks": {
              "A": {
                "methods": [
                  {
                    "name": "execute",
                    "parameters": {
                      "commandLine": [
                        "./ptero-test-command"
                      ],
                      "environment": {{ environment }},
                      "user": "{{ user }}",
                      "workingDirectory": "{{ workingDirectory }}"
                    },
                    "service": "job",
                    "serviceUrl": "{{ shellCommandServiceUrl }}"
                  }
                ],
                "parallelBy": "kitten_name"
              }
            }
          },
          "service": "workflow"
        }
      ],
      "parallelBy": "in_outer_parallel"
    }
  },
  "inputs": {
    "in_outer_parallel": [
      "kittens",
      "puppies"
    ],
    "in_inner_parallel": [
      "Simba",
      "Tabby",
      "Emilio"
    ]
  }
}
